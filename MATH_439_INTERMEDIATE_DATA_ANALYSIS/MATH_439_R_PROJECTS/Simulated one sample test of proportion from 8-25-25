###Example from class 8/28/24.

#1.  p.hat = .15, n = 100, ho:p=.2, ha:p<.2

p.hat = 15/100
n = 100
p0 = .5


#2.  I want to take 10000 samples of size 100 from a bernoulli
#disribution where p=.50.  Each time, store my result in a 
#vector of p.hats (should be length 10000)

p.hat.sims = rep(0,10000)
for(i in 1:10000){
	p.hat.sims[i] = mean(sample(c(1,0),100,prob=c(.2,.8),replace=T))
}

##################Pvalue####################

#3.  Compute the fraction of my simulated p.hats that are greater
#than my actual p.hat of .60.  Should get an answer around .0228.

(length(p.hat.sims[p.hat.sims>.60])/10000


##################Conf interval####################


#3.  Recenter my p.hats around .60 (original p.hat)

p.hat.rc = p.hat.sims - mean(p.hat.sims) + .60


#4.  Find the 95% innermost values to recenterd p.hats
#should be around .402 to .598.

quantile(p.hat.rc,probs=c(.025,.975))

